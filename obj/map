ROM Bank #0 (HOME):
  SECTION: $0040-$0040 ($0001 bytes) ["Vblank"]
  SECTION: $0048-$0048 ($0001 bytes) ["LCDC"]
  SECTION: $0050-$0050 ($0001 bytes) ["Timer_Overflow"]
  SECTION: $0058-$0058 ($0001 bytes) ["Serial"]
  SECTION: $0060-$0060 ($0001 bytes) ["p1thru4"]
  SECTION: $0100-$0D17 ($0C18 bytes) ["start"]
           $0BD2 = begin
           $0179 = StopLCD.wait
           $01BA = Delay
           $01BF = Delay.loop
           $01CF = CollisionCheck_8b.other
           $0150 = ReadJoypad
           $01E8 = PaddleLeft
           $01F8 = PaddleRight
           $01F4 = PaddleLeft.continue
           $0204 = PaddleRight.continue
           $0175 = StopLCD
           $0186 = ClearVRAM
           $0191 = ClearOAM
           $03D0 = FontsTile
           $0BFC = Tiles
           $0CFC = EndTiles
           $027F = GameInit.notSetTile8
           $0276 = GameInit.loop1
           $0BF4 = Title
           $0BFC = TitleEnd
           $019D = FadeIn
           $0305 = UpdateSprites
           $02DE = UpdateVram.scrollLeft
           $02E2 = UpdateVram.blinkBg
           $02F8 = UpdateVram.setTile8Dark
           $0C7C = Tiles.pointLighter
           $0C9C = Tiles.pointDark
           $03B3 = CollisionCheck_Ball_Paddle
           $0357 = GameLogic.continue
           $0341 = GameLogic.bounceSideOfPaddle
           $0352 = GameLogic.bounceTopOfPaddle
           $0382 = GameLogic.bounceTop
           $03AF = GameLogic.ballLost
           $0391 = GameLogic.bounceLeft
           $03A0 = GameLogic.bounceRight
           $03BD = CollisionCheck_Ball_Paddle.x1IsLarger
           $03C3 = CollisionCheck_Ball_Paddle.checkVerticalCollision
           $03CA = CollisionCheck_Ball_Paddle.y1IsLarger
           $0208 = GameInit
           $01D4 = ReadInput
           $0322 = GameLogic
           $0BE0 = GameLoop.waitVBlank
           $02CA = UpdateVram
           $0BDA = GameLoop
           $0BEF = wait
           $0D09 = SCXEffect.makeScroll
           $0CFC = SCXEffect
  SECTION: $0061-$00B6 ($0056 bytes) ["Memory1 Code"]
           $0066 = mem_Set.skip
           $0065 = mem_Set.loop
           $0074 = mem_Copy.skip
           $0071 = mem_Copy.loop
           $0084 = mem_CopyMono.skip
           $007F = mem_CopyMono.loop
           $009A = mem_SetVRAM.skip
           $008F = mem_SetVRAM.loop
           $00B0 = mem_CopyVRAM.skip
           $00A5 = mem_CopyVRAM.loop
           $008B = mem_SetVRAM
           $007B = mem_CopyMono
           $00A1 = mem_CopyVRAM
           $006D = mem_Copy
           $0061 = mem_Set
    SLACK: $338D bytes

WRAM Bank #0:
  SECTION: $C000-$C007 ($0008 bytes) ["RAM"]
           $C000 = _JOYPAD_STATE
           $C001 = _PADDLE_X
           $C002 = _BALL_X
           $C003 = _BALL_Y
           $C004 = _BALL_DELTA_X
           $C005 = _BALL_DELTA_Y
           $C006 = _COUNTER
    SLACK: $0FF8 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  EMPTY

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

