ROM Bank #0 (HOME):
  SECTION: $0040-$0040 ($0001 bytes) ["Vblank"]
  SECTION: $0048-$0048 ($0001 bytes) ["LCDC"]
  SECTION: $0050-$0050 ($0001 bytes) ["Timer_Overflow"]
  SECTION: $0058-$0058 ($0001 bytes) ["Serial"]
  SECTION: $0060-$0060 ($0001 bytes) ["p1thru4"]
  SECTION: $0100-$0D04 ($0C05 bytes) ["start"]
           $0BBF = begin
           $0179 = StopLCD.wait
           $01BA = Delay
           $01BF = Delay.loop
           $01CF = CollisionCheck_8b.other
           $0150 = ReadJoypad
           $01E8 = PaddleLeft
           $01F8 = PaddleRight
           $01F4 = PaddleLeft.continue
           $0204 = PaddleRight.continue
           $0175 = StopLCD
           $0186 = ClearVRAM
           $0191 = ClearOAM
           $03BD = FontsTile
           $0BE9 = Tiles
           $0CE9 = EndTiles
           $0290 = GameInit.notSetTile8
           $0287 = GameInit.loop1
           $0BE1 = Title
           $0BE9 = TitleEnd
           $019D = FadeIn
           $02F2 = UpdateSprites
           $02CB = UpdateVram.scrollLeft
           $02CF = UpdateVram.blinkBg
           $02E5 = UpdateVram.setTile8Dark
           $0C69 = Tiles.pointLighter
           $0C89 = Tiles.pointDark
           $03A0 = CollisionCheck_Ball_Paddle
           $0344 = GameLogic.continue
           $032E = GameLogic.bounceSideOfPaddle
           $033F = GameLogic.bounceTopOfPaddle
           $036F = GameLogic.bounceTop
           $039C = GameLogic.ballLost
           $037E = GameLogic.bounceLeft
           $038D = GameLogic.bounceRight
           $03AA = CollisionCheck_Ball_Paddle.x1IsLarger
           $03B0 = CollisionCheck_Ball_Paddle.checkVerticalCollision
           $03B7 = CollisionCheck_Ball_Paddle.y1IsLarger
           $0208 = GameInit
           $01D4 = ReadInput
           $030F = GameLogic
           $0BCD = GameLoop.waitVBlank
           $02B7 = UpdateVram
           $0BC7 = GameLoop
           $0BDC = wait
           $0CF6 = SCXEffect.makeScroll
           $0CE9 = SCXEffect
  SECTION: $0061-$00B6 ($0056 bytes) ["Memory1 Code"]
           $0066 = mem_Set.skip
           $0065 = mem_Set.loop
           $0074 = mem_Copy.skip
           $0071 = mem_Copy.loop
           $0084 = mem_CopyMono.skip
           $007F = mem_CopyMono.loop
           $009A = mem_SetVRAM.skip
           $008F = mem_SetVRAM.loop
           $00B0 = mem_CopyVRAM.skip
           $00A5 = mem_CopyVRAM.loop
           $008B = mem_SetVRAM
           $007B = mem_CopyMono
           $00A1 = mem_CopyVRAM
           $006D = mem_Copy
           $0061 = mem_Set
    SLACK: $33A0 bytes

WRAM Bank #0:
  EMPTY

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  EMPTY

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

