ROM Bank #0 (HOME):
  SECTION: $0040-$0042 ($0003 bytes) ["Vblank"]
  SECTION: $0048-$004A ($0003 bytes) ["LCDC"]
  SECTION: $0050-$0050 ($0001 bytes) ["Timer_Overflow"]
  SECTION: $0058-$0058 ($0001 bytes) ["Serial"]
  SECTION: $0060-$0060 ($0001 bytes) ["p1thru4"]
  SECTION: $0100-$0ECA ($0DCB bytes) ["start"]
           $0E7F = VblankInt
           $0E90 = LCDCInt
           $0D86 = begin
           $0179 = StopLCD.wait
           $01C4 = Delay
           $01C9 = Delay.loop
           $01D9 = CollisionCheck_8b.other
           $0150 = ReadJoypad
           $01F2 = PaddleLeft
           $0202 = PaddleRight
           $01FE = PaddleLeft.continue
           $020E = PaddleRight.continue
           $0175 = StopLCD
           $0186 = ClearRAM
           $0191 = ClearVRAM
           $019C = ClearOAM
           $0584 = FontsTile
           $0DAF = Tiles
           $0E7F = EndTiles
           $02A2 = GameInit.notSetTile8
           $0299 = GameInit.loop1
           $0DA7 = Title
           $0DAF = TitleEnd
           $02D8 = InitVariables
           $01A7 = FadeIn
           $0318 = InitVariables.InitItem
           $0345 = BackgroundScroll
           $0340 = WindowScroll.resetRWX
           $0342 = WindowScroll.notResetRWX
           $0353 = BackgroundScroll.scrollUpLeft
           $03B4 = UpdateItemPosition
           $0446 = UpdateBallPosition
           $04B8 = CheckCollision_Ball_Paddle
           $0437 = UpdateItemPosition.return
           $03FD = UpdateItemPosition.isAlive
           $03EB = UpdateItemPosition.hideItem
           $03E3 = UpdateItemPosition.itemSprNumber255
           $0415 = UpdateItemPosition.bounceLeft
           $0426 = UpdateItemPosition.bounceRight
           $04E7 = CheckCollision_Ball_Item
           $0471 = UpdateBallPosition.checkBrickHit
           $04B4 = UpdateBallPosition.ballLost
           $0496 = UpdateBallPosition.bounceLeft
           $04A5 = UpdateBallPosition.bounceRight
           $054A = CheckCollision_8x8_8x24
           $04D8 = CheckCollision_Ball_Paddle.bounceSideOfPaddle
           $04F9 = CheckCollision_Ball_Item.continue
           $0567 = CheckCollision_8x8_8x8
           $0539 = CheckCollision_Ball_Item.return
           $0525 = CheckCollision_Ball_Item.bounceBottomOfItem
           $0544 = ItemWasHit
           $0554 = CheckCollision_8x8_8x24.x1IsLarger
           $055A = CheckCollision_8x8_8x24.checkVerticalCollision
           $0561 = CheckCollision_8x8_8x24.y1IsLarger
           $0571 = CheckCollision_8x8_8x8.x1IsLarger
           $0577 = CheckCollision_8x8_8x8.checkVerticalCollision
           $057E = CheckCollision_8x8_8x8.y1IsLarger
           $0212 = GameInit
           $0D8E = GameLoop
           $01DE = ReadInput
           $039D = GameLogic
           $0325 = UpdateVram
           $035C = UpdateOAMRam
           $0E9E = LCDCInt.LYCequalLY
           $0EC6 = LCDCInt.reti
           $0EB7 = LCDCInt.startOfBottomWindow
           $0EAA = LCDCInt.endOfTopWindow
  SECTION: $0061-$00B6 ($0056 bytes) ["Memory1 Code"]
           $0066 = mem_Set.skip
           $0065 = mem_Set.loop
           $0074 = mem_Copy.skip
           $0071 = mem_Copy.loop
           $0084 = mem_CopyMono.skip
           $007F = mem_CopyMono.loop
           $009A = mem_SetVRAM.skip
           $008F = mem_SetVRAM.loop
           $00B0 = mem_CopyVRAM.skip
           $00A5 = mem_CopyVRAM.loop
           $0061 = mem_Set
           $008B = mem_SetVRAM
           $007B = mem_CopyMono
           $00A1 = mem_CopyVRAM
           $006D = mem_Copy
    SLACK: $31D6 bytes

WRAM Bank #0:
  SECTION: $C000-$C02B ($002C bytes) ["RAM"]
           $C000 = _JOYPAD_STATE
           $C001 = _PADDLE_X
           $C006 = _COUNTER
           $C007 = _IS_PAUSED
           $C002 = _BALL_X
           $C003 = _BALL_Y
           $C004 = _BALL_DELTA_X
           $C005 = _BALL_DELTA_Y
           $C00D = _ITEM_1_X
           $C012 = _ITEM_2_X
           $C018 = _BRICKS_TOP
           $C00E = _ITEM_1_Y
           $C011 = _ITEM_1_SPR_NUMBER
           $C013 = _ITEM_2_Y
           $C016 = _ITEM_2_SPR_NUMBER
           $C008 = _ITEM_TEMP_X
           $C00B = _ITEM_TEMP_STATE
           $C00C = _ITEM_TEMP_SPR_NUMBER
           $C009 = _ITEM_TEMP_Y
           $C00A = _ITEM_TEMP_DELTA_X
           $C017 = VblankFlag
    SLACK: $0FD4 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  SECTION: $FE00-$FE17 ($0018 bytes) ["OAMRAM"]
           $FE00 = _SPR0_Y
           $FE04 = _SPR1_Y
           $FE08 = _SPR2_Y
           $FE02 = _SPR0_NUM
           $FE06 = _SPR1_NUM
           $FE0A = _SPR2_NUM
           $FE03 = _SPR0_ATT
           $FE07 = _SPR1_ATT
           $FE0B = _SPR2_ATT
           $FE0E = _SPR3_NUM
           $FE0F = _SPR3_ATT
           $FE13 = _SPR4_ATT
           $FE17 = _SPR5_ATT
           $FE01 = _SPR0_X
           $FE05 = _SPR1_X
           $FE09 = _SPR2_X
           $FE0D = _SPR3_X
           $FE0C = _SPR3_Y
           $FE11 = _SPR4_X
           $FE10 = _SPR4_Y
           $FE12 = _SPR4_NUM
           $FE15 = _SPR5_X
           $FE14 = _SPR5_Y
           $FE16 = _SPR5_NUM
    SLACK: $0088 bytes

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

