ROM Bank #0 (HOME):
  SECTION: $0040-$0040 ($0001 bytes) ["Vblank"]
  SECTION: $0048-$0048 ($0001 bytes) ["LCDC"]
  SECTION: $0050-$0050 ($0001 bytes) ["Timer_Overflow"]
  SECTION: $0058-$0058 ($0001 bytes) ["Serial"]
  SECTION: $0060-$0060 ($0001 bytes) ["p1thru4"]
  SECTION: $0100-$0CD3 ($0BD4 bytes) ["start"]
           $0B8E = begin
           $0179 = StopLCD.wait
           $01BA = Delay
           $01BF = Delay.loop
           $01CF = CollisionCheck_8b.other
           $0150 = ReadJoypad
           $01E8 = PaddleLeft
           $01F8 = PaddleRight
           $01F4 = PaddleLeft.continue
           $0204 = PaddleRight.continue
           $0175 = StopLCD
           $0186 = ClearVRAM
           $0191 = ClearOAM
           $038C = FontsTile
           $0BB8 = Tiles
           $0CB8 = EndTiles
           $0BB0 = Title
           $0BB8 = TitleEnd
           $019D = FadeIn
           $02C1 = UpdateSprites
           $02BC = UpdateVram.scrollLeft
           $036F = CollisionCheck_Ball_Paddle
           $0313 = GameLogic.continue
           $02FD = GameLogic.bounceSideOfPaddle
           $030E = GameLogic.bounceTopOfPaddle
           $033E = GameLogic.bounceTop
           $036B = GameLogic.ballLost
           $034D = GameLogic.bounceLeft
           $035C = GameLogic.bounceRight
           $0379 = CollisionCheck_Ball_Paddle.x1IsLarger
           $037F = CollisionCheck_Ball_Paddle.checkVerticalCollision
           $0386 = CollisionCheck_Ball_Paddle.y1IsLarger
           $0208 = GameInit
           $01D4 = ReadInput
           $02DE = GameLogic
           $0B9C = GameLoop.waitVBlank
           $02A9 = UpdateVram
           $0B96 = GameLoop
           $0BAB = wait
           $0CC5 = SCXEffect.makeScroll
           $0CB8 = SCXEffect
  SECTION: $0061-$00B6 ($0056 bytes) ["Memory1 Code"]
           $0066 = mem_Set.skip
           $0065 = mem_Set.loop
           $0074 = mem_Copy.skip
           $0071 = mem_Copy.loop
           $0084 = mem_CopyMono.skip
           $007F = mem_CopyMono.loop
           $009A = mem_SetVRAM.skip
           $008F = mem_SetVRAM.loop
           $00B0 = mem_CopyVRAM.skip
           $00A5 = mem_CopyVRAM.loop
           $008B = mem_SetVRAM
           $007B = mem_CopyMono
           $00A1 = mem_CopyVRAM
           $0061 = mem_Set
           $006D = mem_Copy
    SLACK: $33D1 bytes

WRAM Bank #0:
  EMPTY

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  EMPTY

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

