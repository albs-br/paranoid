ROM Bank #0 (HOME):
  SECTION: $0040-$0040 ($0001 bytes) ["Vblank"]
  SECTION: $0048-$0048 ($0001 bytes) ["LCDC"]
  SECTION: $0050-$0050 ($0001 bytes) ["Timer_Overflow"]
  SECTION: $0058-$0058 ($0001 bytes) ["Serial"]
  SECTION: $0060-$0060 ($0001 bytes) ["p1thru4"]
  SECTION: $0100-$0DDA ($0CDB bytes) ["start"]
           $0C85 = begin
           $0179 = StopLCD.wait
           $01BA = Delay
           $01BF = Delay.loop
           $01CF = CollisionCheck_8b.other
           $0150 = ReadJoypad
           $01E8 = PaddleLeft
           $01F8 = PaddleRight
           $01F4 = PaddleLeft.continue
           $0204 = PaddleRight.continue
           $0175 = StopLCD
           $0186 = ClearVRAM
           $0191 = ClearOAM
           $0483 = FontsTile
           $0CAF = Tiles
           $0DBF = EndTiles
           $0289 = GameInit.notSetTile8
           $0280 = GameInit.loop1
           $0CA7 = Title
           $0CAF = TitleEnd
           $02BE = InitVariables
           $019D = FadeIn
           $031D = UpdateSprites
           $02F6 = WindowScroll
           $0306 = BackgroundScroll
           $0301 = WindowScroll.resetRWX
           $0303 = WindowScroll.notResetRWX
           $0314 = BackgroundScroll.scrollUpLeft
           $03E3 = CheckCollision_Ball_Paddle
           $0412 = CheckCollision_Ball_Item
           $0387 = UpdateBallPosition
           $0353 = UpdateItemPosition
           $0369 = UpdateItemPosition.bounceLeft
           $0378 = UpdateItemPosition.bounceRight
           $03B2 = UpdateBallPosition.bounceTop
           $03DF = UpdateBallPosition.ballLost
           $03C1 = UpdateBallPosition.bounceLeft
           $03D0 = UpdateBallPosition.bounceRight
           $0449 = CheckCollision_8x8_8x24
           $0403 = CheckCollision_Ball_Paddle.bounceSideOfPaddle
           $0466 = CheckCollision_8x8_8x8
           $0437 = CheckCollision_Ball_Item.bounceBottomOfItem
           $0453 = CheckCollision_8x8_8x24.x1IsLarger
           $0459 = CheckCollision_8x8_8x24.checkVerticalCollision
           $0460 = CheckCollision_8x8_8x24.y1IsLarger
           $0470 = CheckCollision_8x8_8x8.x1IsLarger
           $0476 = CheckCollision_8x8_8x8.checkVerticalCollision
           $047D = CheckCollision_8x8_8x8.y1IsLarger
           $0208 = GameInit
           $01D4 = ReadInput
           $0346 = GameLogic
           $0C93 = GameLoop.waitVBlank
           $02EB = UpdateVram
           $0C8D = GameLoop
           $0CA2 = wait
           $0DCC = SCXEffect.makeScroll
           $0DBF = SCXEffect
  SECTION: $0061-$00B6 ($0056 bytes) ["Memory1 Code"]
           $0066 = mem_Set.skip
           $0065 = mem_Set.loop
           $0074 = mem_Copy.skip
           $0071 = mem_Copy.loop
           $0084 = mem_CopyMono.skip
           $007F = mem_CopyMono.loop
           $009A = mem_SetVRAM.skip
           $008F = mem_SetVRAM.loop
           $00B0 = mem_CopyVRAM.skip
           $00A5 = mem_CopyVRAM.loop
           $008B = mem_SetVRAM
           $007B = mem_CopyMono
           $00A1 = mem_CopyVRAM
           $0061 = mem_Set
           $006D = mem_Copy
    SLACK: $32CA bytes

WRAM Bank #0:
  SECTION: $C000-$C00A ($000B bytes) ["RAM"]
           $C000 = _JOYPAD_STATE
           $C001 = _PADDLE_X
           $C006 = _COUNTER
           $C002 = _BALL_X
           $C003 = _BALL_Y
           $C004 = _BALL_DELTA_X
           $C005 = _BALL_DELTA_Y
           $C008 = _ITEM_1_X
           $C009 = _ITEM_1_Y
           $C00A = _ITEM_1_DELTA_X
    SLACK: $0FF5 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  EMPTY

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

