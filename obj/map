ROM Bank #0 (HOME):
  SECTION: $0040-$0042 ($0003 bytes) ["Vblank"]
  SECTION: $0048-$004A ($0003 bytes) ["LCDC"]
  SECTION: $0050-$0050 ($0001 bytes) ["Timer_Overflow"]
  SECTION: $0058-$0058 ($0001 bytes) ["Serial"]
  SECTION: $0060-$0060 ($0001 bytes) ["p1thru4"]
  SECTION: $0100-$1004 ($0F05 bytes) ["start"]
           $0FB9 = VblankInt
           $0FCA = LCDCInt
           $0E9D = begin
           $0179 = StopLCD.wait
           $01C4 = Delay
           $01C9 = Delay.loop
           $01D9 = CollisionCheck_8b.other
           $0203 = ChangeAndPlayNote.playNote
           $022B = Notes
           $0232 = EndNotes
           $0225 = ChangeAndPlayNote.resetNotes
           $0150 = ReadJoypad
           $0246 = PaddleLeft
           $0256 = PaddleRight
           $0252 = PaddleLeft.continue
           $0262 = PaddleRight.continue
           $0175 = StopLCD
           $0186 = ClearRAM
           $0191 = ClearVRAM
           $019C = ClearOAM
           $069B = FontsTile
           $0EC9 = Tiles
           $0FB9 = EndTiles
           $02D7 = GameInit.loop
           $02FA = GameInit.notSetTile8
           $02F1 = GameInit.loop1
           $0EC1 = Title
           $0EC9 = TitleEnd
           $033A = InitVariables
           $01DE = InitSound
           $01A7 = FadeIn
           $042A = InitVariables.InitItem
           $0456 = BackgroundScroll
           $0451 = WindowScroll.resetRWX
           $0453 = WindowScroll.notResetRWX
           $0464 = BackgroundScroll.scrollUpLeft
           $0491 = UpdateOAMRam.loop
           $04C5 = UpdateItemPosition
           $04AF = GameLogic.loop
           $0558 = UpdateBallPosition
           $05CA = CheckCollision_Ball_Paddle
           $0549 = UpdateItemPosition.return
           $050F = UpdateItemPosition.isAlive
           $04FD = UpdateItemPosition.hideItem
           $04F5 = UpdateItemPosition.itemSprNumber255
           $0527 = UpdateItemPosition.bounceLeft
           $0538 = UpdateItemPosition.bounceRight
           $05F9 = CheckCollision_Ball_Item
           $0583 = UpdateBallPosition.checkBrickHit
           $05C6 = UpdateBallPosition.ballLost
           $05A8 = UpdateBallPosition.bounceLeft
           $05B7 = UpdateBallPosition.bounceRight
           $0661 = CheckCollision_8x8_8x24
           $05EA = CheckCollision_Ball_Paddle.bounceSideOfPaddle
           $060E = CheckCollision_Ball_Item.continue
           $0650 = CheckCollision_Ball_Item.return
           $067E = CheckCollision_8x8_8x8
           $063C = CheckCollision_Ball_Item.bounceBottomOfItem
           $065B = ItemWasHit
           $066B = CheckCollision_8x8_8x24.x1IsLarger
           $0671 = CheckCollision_8x8_8x24.checkVerticalCollision
           $0678 = CheckCollision_8x8_8x24.y1IsLarger
           $0688 = CheckCollision_8x8_8x8.x1IsLarger
           $068E = CheckCollision_8x8_8x8.checkVerticalCollision
           $0695 = CheckCollision_8x8_8x8.y1IsLarger
           $0266 = GameInit
           $0EA5 = GameLoop
           $0232 = ReadInput
           $04A6 = GameLogic
           $0436 = UpdateVram
           $01F7 = ChangeAndPlayNote
           $046D = UpdateOAMRam
           $0FD8 = LCDCInt.LYCequalLY
           $1000 = LCDCInt.reti
           $0FF1 = LCDCInt.startOfBottomWindow
           $0FE4 = LCDCInt.endOfTopWindow
  SECTION: $0061-$00B6 ($0056 bytes) ["Memory1 Code"]
           $0066 = mem_Set.skip
           $0065 = mem_Set.loop
           $0074 = mem_Copy.skip
           $0071 = mem_Copy.loop
           $0084 = mem_CopyMono.skip
           $007F = mem_CopyMono.loop
           $009A = mem_SetVRAM.skip
           $008F = mem_SetVRAM.loop
           $00B0 = mem_CopyVRAM.skip
           $00A5 = mem_CopyVRAM.loop
           $0061 = mem_Set
           $008B = mem_SetVRAM
           $007B = mem_CopyMono
           $00A1 = mem_CopyVRAM
           $006D = mem_Copy
    SLACK: $309C bytes

WRAM Bank #0:
  SECTION: $C000-$C078 ($0079 bytes) ["RAM"]
           $C000 = _JOYPAD_STATE
           $C078 = _CONT_MUS
           $C077 = _NOTE
           $C001 = _PADDLE_X
           $C006 = _COUNTER
           $C007 = _IS_PAUSED
           $C002 = _BALL_X
           $C003 = _BALL_Y
           $C004 = _BALL_DELTA_X
           $C005 = _BALL_DELTA_Y
           $C00E = _ITEM_1_X
           $C014 = _ITEM_2_X
           $C01A = _ITEM_3_X
           $C020 = _ITEM_4_X
           $C026 = _ITEM_5_X
           $C02C = _ITEM_6_X
           $C032 = _ITEM_7_X
           $C038 = _ITEM_8_X
           $C03E = _ITEM_9_X
           $C044 = _ITEM_10_X
           $C04A = _ITEM_11_X
           $C050 = _ITEM_12_X
           $C056 = _ITEM_13_X
           $C05C = _ITEM_14_X
           $C063 = _BRICKS_TOP
           $C008 = _ITEM_TEMP_X
           $C00B = _ITEM_TEMP_STATE
           $C00C = _ITEM_TEMP_TYPE
           $C00D = _ITEM_TEMP_SPR_NUMBER
           $C009 = _ITEM_TEMP_Y
           $C00A = _ITEM_TEMP_DELTA_X
           $C062 = VblankFlag
    SLACK: $0F87 bytes

WRAM Bank #1:
  EMPTY

WRAM Bank #2:
  EMPTY

WRAM Bank #3:
  EMPTY

WRAM Bank #4:
  EMPTY

WRAM Bank #5:
  EMPTY

WRAM Bank #6:
  EMPTY

WRAM Bank #7:
  EMPTY

VRAM Bank #0:
  EMPTY

VRAM Bank #1:
  EMPTY

OAM:
  SECTION: $FE00-$FE4F ($0050 bytes) ["OAMRAM"]
           $FE00 = _SPR0_Y
           $FE04 = _SPR1_Y
           $FE08 = _SPR2_Y
           $FE02 = _SPR0_NUM
           $FE06 = _SPR1_NUM
           $FE0A = _SPR2_NUM
           $FE03 = _SPR0_ATT
           $FE07 = _SPR1_ATT
           $FE0B = _SPR2_ATT
           $FE0E = _SPR3_NUM
           $FE0F = _SPR3_ATT
           $FE13 = _SPR4_ATT
           $FE01 = _SPR0_X
           $FE05 = _SPR1_X
           $FE09 = _SPR2_X
           $FE0D = _SPR3_X
           $FE0C = _SPR3_Y
           $FE10 = _SPR4_Y
    SLACK: $0050 bytes

HRAM:
  EMPTY

SRAM Bank #0:
  EMPTY

SRAM Bank #1:
  EMPTY

SRAM Bank #2:
  EMPTY

SRAM Bank #3:
  EMPTY

SRAM Bank #4:
  EMPTY

SRAM Bank #5:
  EMPTY

SRAM Bank #6:
  EMPTY

SRAM Bank #7:
  EMPTY

SRAM Bank #8:
  EMPTY

SRAM Bank #9:
  EMPTY

SRAM Bank #10:
  EMPTY

SRAM Bank #11:
  EMPTY

SRAM Bank #12:
  EMPTY

SRAM Bank #13:
  EMPTY

SRAM Bank #14:
  EMPTY

SRAM Bank #15:
  EMPTY

